types MapModes
{
	type map_modes_debug = flowcontainer {
		ignoreinvisible = yes

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			name = "map_mode_simple_realms_button"
			onclick = "[SetMapMode('simple_realms')]"
			raw_text = "Srlm"
			tooltip = "MAPMODE_REALMS"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			name = "map_mode_terrain_button"
			onclick = "[SetMapMode('terrain')]"
			raw_text = "Ter"
			tooltip = "MAPMODE_TERRAIN"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			name = "map_mode_baronies_button"
			onclick = "[SetMapMode('baronies')]"
			raw_text = "Bar"
			tooltip = "MAPMODE_BARONIES"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			name = "map_mode_realm_areas_button"
			onclick = "[SetMapMode('realm_areas')]"
			raw_text = "Area"
			tooltip = "MAPMODE_AREAS"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			name = "map_mode_diplomacy_button"
			onclick = "[SetMapMode('diplomacy')]"
			raw_text = "Diplo"
			tooltip = "MAPMODE_DIPLOMACY"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			onclick = "[SetMapMode('debug_character_pools')]"
			raw_text = "Pools"
			raw_tooltip = "Character Pools"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			onclick = "[SetMapMode('debug_ai_war_coordinator_targets')]"
			raw_text = "AI"
			raw_tooltip = "AI War Coordinator targets"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			onclick = "[SetMapMode('debug_visual_regions')]"
			raw_text = "Reg"
			raw_tooltip = "Visual Geographical Regions"
		}
	}

	type map_modes = widget {
		allow_outside = yes
		filter_mouse = all
		alwaystransparent = yes

		size = { 200 95 }

		background = {
			using = Background_Area_Dark
			margin_left = 10
			margin_bottom = 10
			margin_top = -12
			margin_right = 20
			color = { 0.15 0.15 0.15 0.75 }
			visible = "[And(CanChangeMapMode, Not( GreaterThan_CFixedPoint( GetPlayer.MakeScope.Var('hide_ui_timeline').GetValue, '(CFixedPoint)0' ) ))]"
		}

		state = {
			name = custom_map_mode_initialize
			trigger_on_create = yes
			trigger_when = "[And(Not(GameHasMultiplePlayers), And( Not(InDebugMode), And( CanChangeMapMode, And( IsDefaultGUIMode, And( Or( IsMapMode('realms'), IsMapMode('baronies') ), GetScriptedGui('custom_map_mode_initialize').IsValid(GuiScope.End) ) ) ) ) )]"
			on_start = "[GetScriptedGui('custom_map_mode_initialize').Execute(GuiScope.End)]"
		}
		
		@zoom_level_offset = -40

#朝贡地图色卡
		flowcontainer = {
			visible = "[And( And( Not( GetVariableSystem.Exists( 'mapmodes_expand' ) ), IsMapMode('chaogong_map') ), IsDefaultGUIMode )]"
			parentanchor = bottom|right
			position = { 0 -145 }
			direction = vertical
			ignoreinvisible = yes
			min_width = 200
			margin_left = 2
			margin_top = 3
			margin_bottom = 5
			spacing = 5

			state = {
				name = _show
				using = Animation_FadeIn_Standard
			}

			state = {
				name = _hide
				using = Animation_FadeOut_Standard
			}

			background = {
				using = Background_Area_Dark
				margin = { 10 10 }
				margin_top = 5
				color = { 0.15 0.15 0.15 0.75 }
			}

			text_single = {
				parentanchor = hcenter
				text = "chaogong_map"
				default_format = "#color_yellow"
			}
			flowcontainer = {
				direction = vertical
				spacing = 20
				margin_bottom = 10
				#widget = {
					#hbox = {
						#icon = {
							#texture = "gfx/interface/colors/white.dds"
							#size = { 8 8 }
							#color = { 0.0 0.0 0.0 0 }
						#}
						#spacing = 5
						#text_single = {
							#margin_top = -6
							#align = center
							#text = "CUSTOM_TRIBUTARY_MAP_ME"
						#}
						#expand = {}
					#}
				#}
				widget = {
					hbox = {
						icon = {
							texture = "gfx/interface/colors/red.dds"
							size = { 8 8 }
							#color = { 0.0 0.0 1.0 1 }
						}
						spacing = 5
						text_single = {
							margin_top = -6
							align = center
							text = "CUSTOM_TRIBUTARY_MAP_MY_ALLEY"
						}
						expand = {}
					}
				}
				widget = {
					hbox = {
						icon = {
							texture = "gfx/interface/colors/white.dds"
							size = { 8 8 }
							color = { 0.0 0.7 0.7 1 }
						}
						spacing = 5
						text_single = {
							margin_top = -6
							align = center
							text = "CUSTOM_TRIBUTARY_MAP_MY_TRIBUTARY"
						}
						expand = {}
					}
				}
				widget = {
					hbox = {
						icon = {
							texture = "gfx/interface/colors/gold.dds"
							size = { 8 8 }
							#color = { 1.0 0.8 0.2 1 }
						}
						spacing = 5
						text_single = {
							margin_top = -6
							align = center
							text = "CUSTOM_TRIBUTARY_MAP_UNSUZERAIN_KINGDOM"
						}
						expand = {}
					}
				}
				#widget = {
					#hbox = {
						#icon = {
							#texture = "gfx/interface/colors/white.dds"
							#size = { 8 8 }
							#color = { 1.0 0.0 1.0 1 }
						#}
						#spacing = 5
						#text_single = {
							#margin_top = -6
							#align = center
							#text = "CUSTOM_TRIBUTARY_MAP_UNFRIENDLY_EMPIRE"
						#}
						#expand = {}
					#}
				#}
			}
		}
#契约地图色卡
		flowcontainer = {
			visible = "[And( And( Not( GetVariableSystem.Exists( 'mapmodes_expand' ) ), IsMapMode('east_contract_map') ), IsDefaultGUIMode )]"
			parentanchor = bottom|right
			position = { 0 -145 }
			direction = vertical
			ignoreinvisible = yes
			min_width = 200
			margin_left = 2
			margin_top = 3
			margin_bottom = 5
			spacing = 5

			state = {
				name = _show
				using = Animation_FadeIn_Standard
			}

			state = {
				name = _hide
				using = Animation_FadeOut_Standard
			}

			background = {
				using = Background_Area_Dark
				margin = { 10 10 }
				margin_top = 5
				color = { 0.15 0.15 0.15 0.75 }
			}

			text_single = {
				parentanchor = hcenter
				text = "east_contract_map"
				default_format = "#color_yellow"
			}
			flowcontainer = {
				direction = vertical
				spacing = 20
				margin_bottom = 10
				widget = {
					hbox = {
						icon = {
							texture = "gfx/interface/colors/white.dds"
							size = { 8 8 }
							color = { 0.0 0.0 0.0 0 }
						}
						spacing = 5
						text_single = {
							margin_top = -6
							align = center
							text = "CUSTOM_CONTRACT_MAP_ME"
						}
						expand = {}
					}
				}
				widget = {
					hbox = {
						icon = {
							texture = "gfx/interface/colors/white.dds"
							size = { 8 8 }
							color = { 1.0 0.6 0.0 1 }
						}
						spacing = 5
						text_single = {
							margin_top = -6
							align = center
							text = "CUSTOM_CONTRACT_MAP_BUREAU"
						}
						expand = {}
					}
				}
				widget = {
					hbox = {
						icon = {
							texture = "gfx/interface/colors/white.dds"
							size = { 8 8 }
							color = { 1.0 0.0 1.0 1 }
						}
						spacing = 5
						text_single = {
							margin_top = -6
							align = center
							text = "CUSTOM_CONTRACT_MAP_LEGION"
						}
						expand = {}
					}
				}
				widget = {
					hbox = {
						icon = {
							texture = "gfx/interface/colors/white.dds"
							size = { 8 8 }
							color = { 0.0 1.0 0.0 1 }
						}
						spacing = 5
						text_single = {
							margin_top = -6
							align = center
							text = "CUSTOM_CONTRACT_MAP_ROYAL"
						}
						expand = {}
					}
				}
				widget = {
					hbox = {
						icon = {
							texture = "gfx/interface/colors/white.dds"
							size = { 8 8 }
							color = { 0.0 0.0 1.0 1 }
						}
						spacing = 5
						text_single = {
							margin_top = -6
							align = center
							text = "CUSTOM_CONTRACT_MAP_OTHERS"
						}
						expand = {}
					}
				}
			}
		}
#官宦地图色卡
		flowcontainer = {
			visible = "[And( And( Not( GetVariableSystem.Exists( 'mapmodes_expand' ) ), IsMapMode('bureaucrat_houses') ), IsDefaultGUIMode )]"
			parentanchor = bottom|right
			position = { 0 -145 }
			direction = vertical
			ignoreinvisible = yes
			min_width = 200
			margin_left = 2
			margin_top = 3
			margin_bottom = 5
			spacing = 5

			state = {
				name = _show
				using = Animation_FadeIn_Standard
			}

			state = {
				name = _hide
				using = Animation_FadeOut_Standard
			}

			background = {
				using = Background_Area_Dark
				margin = { 10 10 }
				margin_top = 5
				color = { 0.15 0.15 0.15 0.75 }
			}

			text_single = {
				parentanchor = hcenter
				text = "bureaucrat_houses"
				default_format = "#color_yellow"
			}
			flowcontainer = {
				direction = vertical
				spacing = 20
				margin_bottom = 10
				widget = {
					hbox = {
						icon = {
							texture = "gfx/interface/colors/white.dds"
							size = { 8 8 }
							color = { 0.1 0.7 0.0 1 }
						}
						spacing = 5
						text_single = {
							margin_top = -6
							align = center
							text = "CUSTOM_BUREAUCRAT_MAP_SELF"
						}
						expand = {}
					}
				}
				widget = {
					hbox = {
						icon = {
							texture = "gfx/interface/colors/white.dds"
							size = { 8 8 }
							color = { 0.1 0.2 1.0 1 }
						}
						spacing = 5
						text_single = {
							margin_top = -6
							align = center
							text = "CUSTOM_BUREAUCRAT_MAP_DEEP"
						}
						expand = {}
					}
				}
				widget = {
					hbox = {
						icon = {
							texture = "gfx/interface/colors/white.dds"
							size = { 8 8 }
							color = { 0.0 0.6 0.6 1 }
						}
						spacing = 5
						text_single = {
							margin_top = -6
							align = center
							text = "CUSTOM_BUREAUCRAT_MAP_BLUE"
						}
						expand = {}
					}
				}
			}
		}
		flowcontainer = {
			visible = "[And( And( Not( GetVariableSystem.Exists( 'mapmodes_expand' ) ), IsMapMode('realms') ), IsDefaultGUIMode )]"
			parentanchor = top|right
			position = { 0 @zoom_level_offset }
			direction = vertical
			ignoreinvisible = yes
			min_width = 170
			tooltip = "ZOOM_LEVEL_PAPER_MAP_TOOLTIP"

			state = {
				name = _show
				using = Animation_FadeIn_Standard
			}

			state = {
				name = _hide
				using = Animation_FadeOut_Standard
			}

			background = {
				using = Background_Area_Dark
				margin = { 10 10 }
				margin_top = 5
				color = { 0.15 0.15 0.15 0.75 }
			}

			text_single = {
				visible = "[GreaterThanOrEqualTo_int32(GetZoomLevel, '(int32)20')]"
				parentanchor = hcenter
				text = "ZOOM_LEVEL_PAPER_MAP"
				default_format = "#high;italic"
			}

			text_single = {
				visible = "[GreaterThanOrEqualTo_int32(GetZoomLevel, '(int32)20')]"
				parentanchor = hcenter
				text = "ZOOM_LEVEL_SELECTING_REALMS"
			}
		}

		flowcontainer = {
			name = "political_map"
			visible = "[And(And( And( Not( GetVariableSystem.Exists( 'mapmodes_expand' ) ), IsMapMode('realms') ), IsDefaultGUIMode ), Not( GreaterThan_CFixedPoint( GetPlayer.MakeScope.Var('hide_ui_map_zoom').GetValue, '(CFixedPoint)0' ) ))]"
			parentanchor = top|right
			position = { 0 @zoom_level_offset }
			direction = vertical
			ignoreinvisible = yes
			min_width = 170
			tooltip = ZOOM_LEVEL_POLITICAL_TOOLTIP

			state = {
				name = _show
				using = Animation_FadeIn_Standard
			}

			state = {
				name = _hide
				using = Animation_FadeOut_Standard
			}

			background = {
				using = Background_Area_Dark
				margin = { 10 10 }
				margin_top = 5
				color = { 0.15 0.15 0.15 0.75 }
			}

			text_single = {
				visible = "[And(LessThan_int32(GetZoomLevel, '(int32)20'), GreaterThan_int32(GetZoomLevel, '(int32)8'))]"
				parentanchor = hcenter
				text = "ZOOM_LEVEL_POLITICAL"
				default_format = "#color_yellow"
			}

			text_single = {
				visible = "[And(LessThan_int32(GetZoomLevel, '(int32)20'), GreaterThan_int32(GetZoomLevel, '(int32)8'))]"
				parentanchor = hcenter
				text = "ZOOM_LEVEL_SELECTING_REALMS"
			}
		}

		flowcontainer = {
			name = "details_map"
			visible = "[And(And( And(Not(GetVariableSystem.Exists( 'mapmodes_expand' )), IsMapMode('realms')), IsDefaultGUIMode ), Not( GreaterThan_CFixedPoint( GetPlayer.MakeScope.Var('hide_ui_map_zoom').GetValue, '(CFixedPoint)0' ) ))]"
			parentanchor = top|right
			position = { 0 @zoom_level_offset }
			direction = vertical
			ignoreinvisible = yes
			min_width = 170
			tooltip = ZOOM_LEVEL_DETAILS_TOOLTIP

			state = {
				name = _show
				using = Animation_FadeIn_Standard
			}

			state = {
				name = _hide
				using = Animation_FadeOut_Standard
			}

			background = {
				using = Background_Area_Dark
				margin = { 10 10 }
				margin_top = 5
				color = { 0.15 0.15 0.15 0.75 }
			}

			text_single = {
				visible = "[LessThan_int32(GetZoomLevel, '(int32)9')]"
				parentanchor = hcenter
				text = "ZOOM_LEVEL_DETAILS"
				default_format = "#color_green"
			}

			text_single = {
				visible = "[LessThan_int32(GetZoomLevel, '(int32)9')]"
				parentanchor = hcenter
				text = "ZOOM_LEVEL_SELECTING_BARONIES"
			}
		}

			## Realm
			icon_button_mapmode = {
				name = "map_mode_realms_button"
				position = { 0 25 }
				size = { 50 50 }
				visible = "[And(CanChangeMapMode, Not( GreaterThan_CFixedPoint( GetPlayer.MakeScope.Var('hide_ui_timeline').GetValue, '(CFixedPoint)0' ) ))]"
	
				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode('realms')]"
				}
	
				blockoverride "mm_button"
				{
					onclick = "[ClearExploringRealms]"
					shortcut = "map_mode_1"
				}
				blockoverride "mm_icon"
				{
					size = { 50 50 }
				}
	
				blockoverride "mm_glow"
				{
					visible = no
				}
	
				blockoverride "mm_bg_color"
				{
					color = { 0.18 0.18 0 1 }
				}
			}
		# 第一排按钮
		flowcontainer = {
			parentanchor = right|bottom
			margin_right = 15
			direction = vertical
			visible = "[And(CanChangeMapMode, Not( GreaterThan_CFixedPoint( GetPlayer.MakeScope.Var('hide_ui_timeline').GetValue, '(CFixedPoint)0' ) ))]"
			
			## De Jure
			flowcontainer = {
				visible = "[CanChangeMapMode]"
				parentanchor = hcenter
				direction = horizontal
				ignoreinvisible = yes
				spacing = -3

				icon_button_mapmode = {
					name = "map_mode_duchies_button"
					block "map_mode_tutorial"{}

					size = { 38 38 }
				
					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('dejure_duchies')]"
					}
				
					blockoverride "mm_button"
					{
						shortcut = "map_mode_9"
					}
				
					blockoverride "button_bg_color"
					{
						color = { 0.1 0.14 0.1 1 }
					}
				}
			
				icon_button_mapmode = {
					name = "map_mode_kingdoms_button"
					size = { 38 38 }
				
					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('dejure_kingdoms')]"
					}
				
					blockoverride "mm_button"
					{
						shortcut = "map_mode_10"
					}
				
					blockoverride "button_bg_color"
					{
						color = { 0.18 0.1 0.1 1 }
					}
				}
			
				icon_button_mapmode = {
					name = "map_mode_empires_button"
					size = { 38 38 }
				
					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('dejure_empires')]"
					}
				
					blockoverride "mm_button"
					{
						shortcut = "map_mode_11"
					}
				
					blockoverride "button_bg_color"
					{
						color = { 0.12 0.12 0.18 1 }
					}
				}
				#朝贡地图
				icon_button_mapmode = { 
					name = "chaogong_map"
					size = { 38 38 }
					parentanchor = vcenter
					datacontext = "[GetScriptedGui('chaogong_map')]"
					enabled = "[GetScriptedGui('chaogong_map').IsValid(GuiScope.End)]"
				
					blockoverride "mm_button"
					{
						#onclick = "[SetMapMode('debug_character_pools')]"
						
						onclick = "[SetMapMode('chaogong_map')]"
						onclick = "[GetScriptedGui('chaogong_map').Execute(GuiScope.End)]"
						down = "[And( GetScriptedGui('chaogong_map').IsShown(GuiScope.End), IsMapMode('debug_character_pools') )]"
						shortcut = "map_mode_2"
						tooltip = "chaogong_map_tooltip"
					}
					blockoverride "mm_icon"
					{
						down = "[And( GetScriptedGui('chaogong_map').IsShown(GuiScope.End), IsMapMode('debug_character_pools') )]"
						texture = "gfx/interface/icons/flat_icons/mapmode_tributaries.dds"
					}
				
					blockoverride "mm_glow"
					{
						visible = "[And( GetScriptedGui('chaogong_map').IsShown(GuiScope.End), IsMapMode('debug_character_pools') )]"
					}
				}
			}

			## Other 第二排按钮
			flowcontainer = {
				parentanchor = hcenter
				direction = horizontal
				ignoreinvisible = no
				spacing = -2

				visible = "[And(CanChangeMapMode, Not( GreaterThan_CFixedPoint( GetPlayer.MakeScope.Var('hide_ui_timeline').GetValue, '(CFixedPoint)0' ) ))]"

				icon_button_mapmode = {
					name = "map_mode_religion_button"
					size = { 32 32 }
					parentanchor = vcenter

					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('religions')]"
					}

					blockoverride "mm_button"
					{
						shortcut = "map_mode_3"
					}
				}

				icon_button_mapmode = {
					name = "map_mode_cultures_button"
					size = { 32 32 }
					parentanchor = vcenter

					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('cultures')]"
					}

					blockoverride "mm_button"
					{
						shortcut = "map_mode_2"
					}
				}

				icon_button_mapmode = {
					name = "map_mode_houses_button"
					size = { 32 32 }
					parentanchor = vcenter

					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('houses')]"
					}

					blockoverride "mm_button"
					{
						shortcut = "map_mode_4"
					}
				}
				#契约地图
				icon_button_mapmode = {
					name = "east_contract_map"
					size = { 32 32 }
					parentanchor = vcenter
					enabled = "[And(Not(IsObserver), GetScriptedGui('east_contract_map').IsValid(GuiScope.End))]"

					blockoverride "mm_button"
					{
						onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Character.MakeScope ).End )]"
						onclick = "[GetScriptedGui('east_contract_map').Execute(GuiScope.End)]"
						
						onclick = "[SetMapMode('east_contract_map')]"
						
						down = "[And( GetScriptedGui('east_contract_map').IsShown(GuiScope.End), IsMapMode('debug_character_pools') )]"
						shortcut = "map_mode_8" #
						tooltip = "east_contract_map_tooltip"
					}
					blockoverride "mm_icon"
					{
						down = "[And( GetScriptedGui('east_contract_map').IsShown(GuiScope.End), IsMapMode('debug_character_pools') )]"
						texture = "gfx/interface/icons/flat_icons/mapmode_trade.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[And( GetScriptedGui('east_contract_map').IsShown(GuiScope.End), IsMapMode('debug_character_pools') )]"
					}
				}

				widget = {
					parentanchor = vcenter
					size = {32 32}

					button_round = {
						parentanchor = center
						size = { 30 30 }
						onclick = "[GetVariableSystem.Toggle( 'mapmodes_expand' )]"

						button_plus_small = {
							parentanchor = center
							alwaystransparent = yes
						}
					}
				}
			}
		}

		flowcontainer_additional_mapmodes = {
			parentanchor = top|right
			widgetanchor = bottom|right
			position = { 20 21 } 
		}

		
	} # type map_modes = widget {...}

	type mm_text_button = button_tertiary {
		name = "players"
		block 'datacontext'
		{
			datacontext = "[GetMapMode( 'realms' )]"
		}
		block 'visible'
		{
			visible = "[CanChangeMapMode]"
		}

		parentanchor = hcenter
		size = { 159 25 }

		onclick = "[SetMapMode( MapMode.GetKey )]"
		alwaystransparent = "[IsMapMode( MapMode.GetKey )]"
		
		text = "[MapMode.GetName]"
		tooltip = "[MapMode.GetDesc]"

		using = tooltip_ne

		button_expand = {
			visible = "[IsMapMode( MapMode.GetKey )]"

			size = { 15	15 }
			parentanchor = left|vcenter

			alwaystransparent = yes
		}

		button_expand = {
			visible = "[IsMapMode( MapMode.GetKey )]"
			mirror = horizontal

			size = { 15	15 }
			parentanchor = right|vcenter

			alwaystransparent = yes
		}
	}
	
	type mm_button_round = button_round {
		block 'datacontext'
		{
			datacontext = "[GetMapMode( 'realms' )]"
		}
		parentanchor = center
		size = { 30 30 }

		onclick = "[SetMapMode( MapMode.GetKey )]"
		alwaystransparent = "[IsMapMode( MapMode.GetKey )]"

		tooltip = "[MapMode.GetDesc]"
		using = tooltip_ws
	}

	type flowcontainer_additional_mapmodes = flowcontainer {

			visible = "[GetVariableSystem.Exists( 'mapmodes_expand' )]"
			visible_at_creation = no

			margin = { 22 10 }
			alwaystransparent = no
			filter_mouse = all

			state = {
				name = _mouse_hierarchy_leave
				on_finish = "[GetVariableSystem.Toggle( 'mapmodes_expand' )]"
			}

			state = {
				name = _show
				using = Animation_FadeIn_Quick
			}

			state = {
				name = _hide
				using = Animation_FadeOut_Standard
			}

			flowcontainer = {
				direction = vertical
				margin = { 10 10 }
				margin_top = 5
				ignoreinvisible = yes
	
				background = {
					using = Background_Area_Dark
					color = { 0.15 0.15 0.15 0.75 }
				}

				text_single = {
					parentanchor = hcenter
					text = "ADDITIONAL_MAPMODES"
					default_format = "#medium"
					margin_bottom = 5
					max_width = 130
				}

				block "mapmodes_insert_before"
				{
						
				}

				flowcontainer = {
					ignoreinvisible = yes
					parentanchor = hcenter
	
					icon_button_mapmode = {
						name = "map_mode_epidemics_button"
						parentanchor = vcenter
						size = { 32 32 }
	
						blockoverride 'mm_datacontext'
						{
							datacontext = "[GetMapMode( 'epidemics' )]"
						}
	
						blockoverride "mm_icon"
						{
							texture = "gfx/interface/icons/flat_icons/map_modes/epidemics.dds"
							size = { 28 28 }
						}
	
						blockoverride "mm_button"
						{
							shortcut = "map_mode_16"
						}
					}
	
					icon_button_mapmode = {
						name = "map_mode_legends_button"
						visible = "[And( HasDlcFeature( 'legends' ), CanChangeMapMode )]"
						parentanchor = vcenter
						size = { 32 32 }
	
						blockoverride 'mm_datacontext'
						{
							datacontext = "[GetMapMode( 'legends' )]"
						}
	
						blockoverride "mm_icon"
						{
							texture = "gfx/interface/icons/flat_icons/legends.dds"
							size = { 30 30 }
						}
	
						blockoverride "mm_button"
						{
							shortcut = "map_mode_17"
						}
					}
				}
	
				widget ={
					size = {0 4}
				}
	
				divider_light = {
					min_width = 100
					parentanchor = hcenter
				}
				widget ={
					size = {0 4}
				}

				flowcontainer = {
					ignoreinvisible = yes
					parentanchor = hcenter
	
					icon_button_mapmode = {
						name = "map_mode_counties_button"
						parentanchor = vcenter
						size = { 32 32 }
	
						blockoverride 'mm_datacontext'
						{
							datacontext = "[GetMapMode( 'dejure_counties' )]"
						}
	
						blockoverride "mm_icon"
						{
							texture = "gfx/interface/icons/flat_icons/county_crown.dds"
							size = { 20 20 }
						}
	
						blockoverride "mm_button"
						{
							shortcut = "map_mode_6"
						}
					}
	
					icon_button_mapmode = {
						name = "map_mode_government_button"
						parentanchor = vcenter
						size = { 32 32 }
	
						blockoverride 'mm_datacontext'
						{
							datacontext = "[GetMapMode( 'government' )]"
						}
	
						blockoverride "mm_icon"
						{
							texture = "gfx/interface/icons/flat_icons/government.dds"
							size = { 20 20 }
						}
	
						blockoverride "mm_button"
						{
							shortcut = "map_mode_5"
						}
					}
	
					icon_button_mapmode = {
						name = "map_mode_court_languages_button"
						visible = "[And( HasDlcFeature( 'royal_court' ), CanChangeMapMode )]"
						parentanchor = vcenter
						size = { 32 32 }
	
						blockoverride 'mm_datacontext'
						{
							datacontext = "[GetMapMode('court_languages')]"
						}
	
						blockoverride "mm_icon"
						{
							texture = "gfx/interface/icons/culture_pillars/language.dds"
							size = { 20 20 }
						}
	
						blockoverride "mm_button"
						{
							shortcut = "map_mode_7"
						}
					}
	
					icon_button_mapmode = {
						name = "map_mode_landless_rulers_button"
						visible = "[And( HasDlcFeature( 'landless_playable' ), CanChangeMapMode )]"
						parentanchor = vcenter
						size = { 32 32 }
	
						blockoverride 'mm_datacontext'
						{
							datacontext = "[GetMapMode( 'landless_rulers' )]"
						}
	
						blockoverride "mm_icon"
						{
							texture = "gfx/interface/icons/flat_icons/adventurer.dds"
							size = { 20 20 }
						}
	
						blockoverride "mm_button"
						{
							shortcut = "map_mode_18"
						}
					}
	
					icon_button_mapmode = {
						name = "players"
						visible = "[And( Or(GameHasMultiplePlayers, InDebugMode), CanChangeMapMode)]"
						parentanchor = vcenter
						size = { 32 32 }
	
						blockoverride 'mm_datacontext'
						{
							datacontext = "[GetMapMode( 'players' )]"
						}
	
						blockoverride "mm_icon"
						{
							texture = "gfx/interface/icons/flat_icons/map_modes/players.dds"
							size = { 26 26 }
						}
	
						blockoverride "mm_button"
						{
							shortcut = "map_mode_8"
						}
					}
				}
	
				widget ={
					size = {0 4}
				}
	
				divider_light = {
					min_width = 100
					parentanchor = hcenter
				}
				widget ={
					size = {0 4}
				}
	
				flowcontainer = {
					ignoreinvisible = yes
					parentanchor = hcenter
					
					icon_button_mapmode = {
						name = "economy_buildings"
						parentanchor = vcenter
						size = { 32 32 }
	
						blockoverride 'mm_datacontext'
						{
							datacontext = "[GetMapMode( 'economy_buildings' )]"
						}
	
						blockoverride "mm_icon"
						{
							texture = "gfx/interface/icons/flat_icons/economy.dds"
							size = { 20 20 }
						}
	
						blockoverride "mm_button"
						{
							shortcut = "map_mode_14"
						}
					}
	
					icon_button_mapmode = {
						name = "county_development"
						parentanchor = vcenter
						size = { 32 32 }
	
						blockoverride 'mm_datacontext'
						{
							datacontext = "[GetMapMode( 'county_development' )]"
						}
	
						blockoverride "mm_icon"
						{
							texture = "gfx/interface/icons/flat_icons/development.dds"
							size = { 20 20 }
						}
	
						blockoverride "mm_button"
						{
							shortcut = "map_mode_13"
						}
					}
	
					icon_button_mapmode = {
						name = "county_control"
						parentanchor = vcenter
						size = { 32 32 }
	
						blockoverride 'mm_datacontext'
						{
							datacontext = "[GetMapMode( 'county_control' )]"
						}
	
						blockoverride "mm_icon"
						{
							texture = "gfx/interface/icons/flat_icons/county_control.dds"
							size = { 22 22 }
						}
	
						blockoverride "mm_button"
						{
							shortcut = "map_mode_15"
						}
					}
	
					icon_button_mapmode = {
						name = "simple_terrain"
						parentanchor = vcenter
						size = { 32 32 }
	
						blockoverride 'mm_datacontext'
						{
							datacontext = "[GetMapMode( 'simple_terrain' )]"
						}
	
						blockoverride "mm_icon"
						{
							texture = "gfx/interface/icons/flat_icons/terrain.dds"
							size = { 20 20 }
						}
	
						blockoverride "mm_button"
						{
							shortcut = "map_mode_12"
						}
					}
				}
				
				text_single = {
                parentanchor = hcenter
                text = "ADDITIONAL_MAP_SETTINGS"
                default_format = "#medium"
                margin_bottom = 5
                max_width = 130
            }

            flowcontainer = {
                direction = vertical
                margin = { 5 5 }
                ignoreinvisible = yes

                background = {
            		using = Background_Area_Dark
            	}

            	min_width = 159

				button_checkbox_label = {
					onclick = "[ToggleShowEpidemicMapGraphics]"
					tooltip = "SETTING_SHOW_EPIDEMIC_MAP_GRAPHICS_TOOLTIP"

					state = {
						name = _show
						using = Animation_FadeIn_Standard
					}

					state = {
						name = _hide
						using = Animation_FadeOut_Standard
					}

					blockoverride "checkbox"
					{
						checked = "[ShowEpidemicMapGraphics]"
						size = { 20 20 }
					}

					blockoverride "text"
					{
						text = "SETTING_SHOW_EPIDEMIC_MAP_GRAPHICS"
						min_width = 120
						max_width = 125
						fontsize = 14
						max_height = 18
					}
				}

				button_checkbox_label = {
	                onclick = "[ToggleShowLegendMapGraphics]"
	                tooltip = "SETTING_SHOW_LEGEND_MAP_GRAPHICS_TOOLTIP"
	                visible = "[HasDlcFeature( 'legends' )]"

	                state = {
	                    name = _show
	                    using = Animation_FadeIn_Standard
	                }

	                state = {
	                    name = _hide
	                    using = Animation_FadeOut_Standard
	                }

	                blockoverride "checkbox"
	                {
	                    checked = "[ShowLegendMapGraphics]"
	                    size = { 20 20 }
	                }

	                blockoverride "text"
	                {
	                    text = "SETTING_SHOW_LEGEND_MAP_GRAPHICS"
	                    min_width = 120
	                    max_width = 125
	                    fontsize = 14
                        max_height = 18
	                }
	            }
            }				
		}
	}

	type mini_map_mode = widget {
		allow_outside = yes
		filter_mouse = all
		alwaystransparent = yes

		size = { 320 60 }

		background = {
			using = Background_Area_Dark
			margin = { 10 0 }
			color = { 0.15 0.15 0.15 0.75 }
		}

		hbox = {
			vbox = {
				layoutpolicy_horizontal = expanding

				text_single = {
					text = MAP_MODE
				}

				text_single = {
					text = "[GetCurrentMapMode.GetName]"
					default_format = "#high"
				}
			}

			expand = {}

			icon_button_mapmode = {
				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'struggle' )]"
				}
			}

			icon_button_mapmode = {
				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'realms' )]"
				}
			}

			icon_button_mapmode = {
				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'religions' )]"
				}
			}

			icon_button_mapmode = {
				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'cultures' )]"
				}
			}

			widget = {
				size = {32 32}

				button_round = {
					size = { 30 30 }
					parentanchor = top|hcenter
					widgetanchor = center
					position = { 0 10 }

					onclick = "[GetVariableSystem.Toggle( 'mapmodes_expand' )]"

					button_plus_small = {
						parentanchor = center
						alwaystransparent = yes
					}
				}
			}
		}

		flowcontainer_additional_mapmodes = {
			parentanchor = top|right
			widgetanchor = bottom|right
			position = { 31 10 } 

			blockoverride "mapmodes_insert_before"
			{
				mm_text_button = {
					name = "map_mode_dejure_duchies_button"
					blockoverride 'datacontext'
					{
						datacontext = "[GetMapMode( 'dejure_duchies' )]"
					}
					shortcut = "map_mode_9"
				}

				mm_text_button = {
					name = "map_mode_dejure_kingdoms_button"
					blockoverride 'datacontext'
					{
						datacontext = "[GetMapMode( 'dejure_kingdoms' )]"
					}
					shortcut = "map_mode_10"
				}

				mm_text_button = {
					name = "map_mode_dejure_empires_button"
					blockoverride 'datacontext'
					{
						datacontext = "[GetMapMode( 'dejure_empires' )]"
					}
					shortcut = "map_mode_11"
				}

				widget ={
					size = {0 4}
				}

				divider_light = {
					min_width = 100
					parentanchor = hcenter
				}
				widget ={
					size = {0 4}
				}
			}
		}
	} # type mini_map_mode = widget {...}
}
