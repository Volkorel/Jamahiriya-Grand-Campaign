# The entry should be named in the same way that the elective succession law is named to define it's voter's logic.
# Root scope - Elector, the character voting in the election.
# scope:candidate scope - Candidate, Character considered for the title.
# scope:title scope - Title, The title the nomination is for.
# scope:holder scope - Ruler, The ruler currently holding the title.
# scope:holder_candidate scope - Favored Candidate, The title owner's candidate.
# The voter will vote for the top score candidate calculated from this script.

steppe_elective = {
	elector_vote_strength = {
		base = 0
		modifier = { #Each voter is the "representative" of all the free men living in his domain. The larger the domain, the more voting power he has.
			desc = tooltip_scandinavian_elective_development
			is_landed = yes
			domain_size >= 1
			any_held_title = {
				tier = tier_county
				development_level > 0
				target_is_de_jure_liege_or_above = scope:title
			}
			add = {
				every_sub_realm_county = {
					limit = {
						#tier = tier_county
						development_level > 0
						#target_is_de_jure_liege_or_above = scope:title
					}
					add = {
						value = this.development_level
						if = {
							limit = {
								NOT = { this.faith = root.faith }
							}
							divide = 2
						}
						if = {
							limit = {
								NOT = { this.culture = { has_same_culture_heritage = root.culture } }
							}
							divide = 2
						}
						min = 1
					}
				}
			}
		}
		modifier = { #Further boost/reduction is given depending on capital county's opinion.
			desc = tooltip_scandinavian_elective_capital_opinion
			is_landed = yes
			exists = capital_county
			OR = {
				capital_county.county_opinion <= -5
				capital_county.county_opinion >= 5
			}
			add = {
				value = capital_county.county_opinion
				multiply = 0.2
			}
		}
		min = 1
	}

	electors = {
		add = holder
		add = {
			type = holder_close_or_extended_family
			limit = {
				scope:holder = {
					any_held_title = {
						tier = tier_empire
						count < 2
					}
				}
				OR = {
					AND = {
						is_vassal_of = scope:holder #Only Powerful, direct, de jure vassals are potential candidates.
						is_powerful_vassal = yes
					}
					is_councillor_of = scope:holder
				}
			}
		}
		add = {
			type = title_dejure_vassals
			limit = {
				scope:holder = {
					any_sub_realm_duchy = {
						count <= 20
					}
				}
				is_vassal_of = scope:holder #Only Powerful, direct, de jure vassals are potential candidates.
				is_powerful_vassal = yes
				OR = { #1 or 2 tiers of difference for Electors.
					scope:title = { tier = tier_county }
					AND = {
						scope:title = { tier = tier_duchy }
						highest_held_title_tier >= 1
					}
					AND = {
						scope:title = { tier = tier_kingdom }
						highest_held_title_tier >= 2
					}
					AND = {
						scope:title = { tier = tier_empire }
						highest_held_title_tier >= 3
					}
				}
			}
		}
	}

	candidate_score = {
		base = 0
		######################	Elector self-voting pattern	##########################
		elector_self_voting_pattern_feudal_elective_modifier = yes

		##########################	Holder voting pattern	##########################
		holder_voting_pattern_feudal_elective_modifier = yes

		##########################	Elector voting patterns (circumstances)	##########################
		elector_voting_pattern_circumstances_feudal_elective_modifier = yes
		elector_voting_pattern_circumstances_scandinavian_elective_modifier = yes

		##########################	Elector voting patterns (prestige/piety)	##########################
		elector_voting_pattern_prestige_piety_feudal_elective_modifier = yes

		##########################	Elector voting patterns (traits)	##########################
		elector_voting_pattern_traits_feudal_elective_modifier = yes

		##########################	Elector voting patterns (opinion)	##########################
		elector_voting_pattern_opinion_feudal_elective_modifier = yes
	}

	#scope:candidate = Candidate, scope:title = Title, scope:holder_candidate = Candidate currently selected by ruler.
	candidates = {
		add = {
			type = holder_direct_vassals
			limit = {
				feudal_elective_potential_landed_candidate_trigger = yes
			}
		}
		add = {
			type = title_claimants
			limit = {
				feudal_elective_potential_landless_claimant_candidate_trigger = yes
			}
		}
		add = {
			type = holder_close_or_extended_family
			limit = {
				feudal_elective_potential_landless_dynastic_candidate_trigger = yes
			}
		}
		#add = {
			#type = title_dejure_vassals
			#limit = {
				#scope:holder = { highest_held_title_tier <= tier_kingdom }
				#is_vassal_of = scope:holder #Only Powerful, direct, de jure vassals are potential candidates.
				#is_powerful_vassal = yes
				#feudal_elective_potential_landed_candidate_trigger = yes
			#}
		#}
	}
}