# Custom CBs for FP2
mandate_war = {
	group = subjugation
	icon = struggle

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	interface_priority = 112

	allowed_for_character = {
		# Attacker must be Involved in Struggle during correct phase
		any_character_struggle = {
			involvement = involved
			is_struggle_type = tartaria_struggle
			has_struggle_phase_parameter = unlocks_oe_reclamation_casus_belli
		}
		NOT = {
			government_has_flag = government_is_landless_adventurer
		}
	}

	allowed_against_character = {
		# 中原皇帝
		is_oe_imperial_government_trigger = yes
		OR = {
			character_is_land_realm_neighbor = scope:attacker
			AND = {
				exists = scope:attacker.liege
				character_is_land_realm_neighbor = scope:attacker.liege
			}
		}
	}

	target_titles = all
	target_title_tier = empire
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	ai_score_mult = { value = oe_expel_interloper_ai_targeting_value }

	#	valid_to_start = {
	#		scope:target = {
	#			any_de_jure_county = {
	#				any_county_struggle = { this = struggle:tartaria_struggle }
	#			}
	#		}
	#	}

	should_invalidate = {
		OR = {
			scope:attacker = {
				is_independent_ruler = no
			}
			scope:defender = {
				NOT = { is_oe_imperial_government_trigger = yes }
			}
		}
	}

	on_invalidated_desc = msg_county_conquest_war_invalidated_message
	
	on_invalidated = {}

	cost = {
		piety = {
			value = 0
			if = {
				limit = {
					scope:defender.faith = scope:attacker.faith
				}
				add = {
					value = minor_piety_value
					desc = CB_SAME_FAITH_COST
				}
			}

			multiply = common_cb_piety_cost_multiplier
		}
		prestige = {
			value = minor_prestige_value
			if = {
				limit = {
					NOT = { scope:defender.faith = scope:attacker.faith }
				}
				add = {
					value = minor_prestige_value
					desc = CB_COST_DIFFERENT_FAITH
				}
			}
			add = {
				value = 0
				scope:defender = {
					every_realm_county = {
						limit = {
							any_county_struggle = { this = struggle:tartaria_struggle }
						}
						add = fp2_expel_interloper_county_cost_value
					}
				}
				desc = CELESTIA_GREAT_HOLY_WAR_WAR_NAME # cost per-reclaimed county
			}
			multiply = common_cb_prestige_cost_multiplier
		}
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		triggered_desc = {
			trigger = {
				scope:attacker = {
					culture = { has_cultural_pillar = heritage_chinese }
				}
			}
			desc = MANDATE_WAR_PLAIN_victoty
		}
		triggered_desc = {
			trigger = {
				scope:attacker = {
					NOT = { culture = { has_cultural_pillar = heritage_chinese } }
				}
			}
			desc = MANDATE_WAR_STEPPE_victoty
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
			add_claim_on_loss = no
		}
		
		if = {
			limit = {
				scope:defender.primary_title.tier < scope:attacker.primary_title.tier
			}
			scope:defender = {
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
			}
		}
		else = {
			scope:defender = {
				every_held_title = {
					if = {
						limit = {
							tier = scope:defender.primary_title.tier
						}
						change_title_holder = {
							holder = scope:attacker
							change = scope:change
						}
					}
					else_if = {
						limit = {
							OR = {
								NOT = { exists = scope:secondary_title }
								tier > scope:secondary_title.tier
							}
						}
						save_temporary_scope_as = secondary_title
					}
				}
			}
			
			scope:defender = {
				if = {
					limit = {
						exists = scope:secondary_title
					}
					every_vassal = {
						limit = {
							primary_title.tier >= scope:secondary_title.tier
							NOT = {
								primary_title.tier = tier_barony
							}
						}
						change_liege = {
							liege = scope:attacker
							change = scope:change
						}
					}
				}
			}
			
			scope:defender = {
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
			}
		}
		
		resolve_title_and_vassal_change = scope:change
		
		
		# Prestige level progress for the attacker
		scope:attacker = {
			add_prestige_experience = {
				value = major_prestige_value
			}
		}

		# Prestige loss for the defender
		scope:defender = {
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Break alliances now out of diplo range
		scope:attacker = {
			if = {
				limit = {
					any_ally = {
						NOT = { in_diplomatic_range = scope:attacker }
					}
				}
				every_ally = {
					limit = {
						NOT = { in_diplomatic_range = scope:attacker }
					}
					break_alliance = scope:attacker
				}
			}
		}

		# Truce
		add_truce_attacker_victory_effect = yes
	}

	on_white_peace_desc = {
		triggered_desc = {
			trigger = {
				scope:defender = { oe_struggle_tartaria_reclamation_should_vassalize_trigger = yes }
			}
			desc = MANDATE_WAR_NAME_white_peace_desc_vassalize
		}
		triggered_desc = {
			trigger = {
				scope:defender = { oe_struggle_tartaria_reclamation_should_vassalize_trigger = no }
			}
			desc = MANDATE_WAR_NAME_white_peace_desc_conquer
		}
	}

	on_white_peace = {
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # not important as scale values are identical
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		triggered_desc = {
			trigger = {
				scope:attacker = {
					culture = { has_cultural_pillar = heritage_chinese }
				}
			}
			desc = MANDATE_WAR_PLAIN_defeat
		}
		triggered_desc = {
			trigger = {
				scope:attacker = {
					NOT = { culture = { has_cultural_pillar = heritage_chinese } }
				}
			}
			desc = MANDATE_WAR_STEPPE_defeat
		}
	}

	on_defeat = {
        scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_high_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}

		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "MANDATE_WAR_NAME"
	war_name_base = "MANDATE_WAR_NAME_BASE"
	cb_name = "MANDATE_WAR_CB_NAME"

	interface_priority = 80

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	white_peace_possible = no
}

oe_expel_interloper = {
	group = conquest
	icon = struggle

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	interface_priority = 112

	allowed_for_character = {
		# Attacker must be Involved in Struggle during correct phase
		any_character_struggle = {
			involvement = involved
			is_struggle_type = tartaria_struggle
			has_struggle_phase_parameter = unlocks_oe_reclamation_casus_belli
		}
		NOT = {
			government_has_flag = government_is_landless_adventurer
		}
	}

	allowed_against_character = {
		# Defender must not be Involved in Struggle
		NOT = {
			any_character_struggle = {
				involvement = involved
				is_struggle_type = tartaria_struggle
			}
		}
		# Outsider who owns tartaria lands
		any_realm_county = {
			any_county_struggle = { is_struggle_type = tartaria_struggle }
		}
	}

	target_titles = neighbor_land_or_water
	target_title_tier = duchy
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	ai_score_mult = { value = oe_expel_interloper_ai_targeting_value }

	valid_to_start = {
		scope:target = {
			any_de_jure_county = {
				any_county_struggle = { this = struggle:tartaria_struggle }
			}
		}
	}

	should_invalidate = {
		scope:defender = {
			NOT = { 
				any_realm_county = {
					any_county_struggle = { is_struggle_type = tartaria_struggle }
				}
			}
		}
	}

	on_invalidated_desc = msg_county_conquest_war_invalidated_message
	
	on_invalidated = {}

	cost = {
		piety = {
			value = 0
			if = {
				limit = {
					scope:defender.faith = scope:attacker.faith
				}
				add = {
					value = minor_piety_value
					desc = CB_SAME_FAITH_COST
				}
			}

			multiply = common_cb_piety_cost_multiplier
		}
		prestige = {
			value = minor_prestige_value
			if = {
				limit = {
					NOT = { scope:defender.faith = scope:attacker.faith }
				}
				add = {
					value = minor_prestige_value
					desc = CB_COST_DIFFERENT_FAITH
				}
			}
			add = {
				value = 0
				scope:defender = {
					every_realm_county = {
						limit = {
							any_county_struggle = { this = struggle:tartaria_struggle }
						}
						add = fp2_expel_interloper_county_cost_value
					}
				}
				desc = CB_COST_IBERIAN_RECLAMATION # cost per-reclaimed county
			}
			multiply = common_cb_prestige_cost_multiplier
		}
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		triggered_desc = {
			trigger = {
				scope:attacker = { is_local_player = yes }
				scope:defender = { oe_struggle_tartaria_reclamation_should_vassalize_trigger = yes }
			}
			desc = iberian_reclamation_cb_victory_desc_attacker_vassalize
		}
		triggered_desc = {
			trigger = {
				scope:defender = {
					is_local_player = yes
					oe_struggle_tartaria_reclamation_should_vassalize_trigger = yes
				}
			}
			desc = iberian_reclamation_cb_victory_desc_defender_vassalize
		}
		triggered_desc = {
			trigger = {
				scope:attacker = { is_local_player = yes }
				scope:defender = {
					oe_struggle_tartaria_reclamation_should_vassalize_trigger = no
				}
			}
			desc = iberian_reclamation_cb_victory_desc_attacker_conquer_2
		}
		triggered_desc = {
			trigger = {
				scope:attacker = { is_local_player = yes }
				scope:defender = {
					oe_struggle_tartaria_reclamation_should_vassalize_trigger = no
					any_vassal_or_below = { oe_tartaria_reclamation_vassalize_vassal_trigger = yes }
				}
			}
			desc = iberian_reclamation_cb_victory_desc_attacker_conquer_1
		}
		triggered_desc = {
			trigger = {
				scope:defender = {
					is_local_player = yes
					oe_struggle_tartaria_reclamation_should_vassalize_trigger = no
				}
			}
			desc = iberian_reclamation_cb_victory_desc_defender_conquer_2
		}
		triggered_desc = {
			trigger = {
				scope:defender = {
					is_local_player = yes
					oe_struggle_tartaria_reclamation_should_vassalize_trigger = no
					any_vassal_or_below = { oe_tartaria_reclamation_vassalize_vassal_trigger = yes }
				}
			}
			desc = iberian_reclamation_cb_victory_desc_defender_conquer_1
		}
	}

	on_victory = {
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = title_change
			add_claim_on_loss = yes
		}
		scope:defender = {
			# Vassalize if entirely within duchy
			if = {
				limit = { oe_struggle_tartaria_reclamation_should_vassalize_trigger = yes }
				change_liege = {
					liege = scope:attacker
					change = scope:title_change
				}
			}
			else = {
				every_vassal_or_below = {
					limit = { oe_tartaria_reclamation_vassalize_vassal_trigger = yes }
					add_to_list = transferred_vassal
					change_liege = {
						liege = scope:attacker
						change = scope:title_change
					}
				}
				every_in_list = {
					list = target_titles
					every_de_jure_county = {
						limit = {
							holder.top_liege = scope:defender
							NOR = {
								holder.liege = scope:attacker
								holder = scope:attacker
								holder = { is_in_list = transferred_vassal }
							}
						}
						change_title_holder = {
							holder = scope:attacker
							change = scope:title_change
						}
					}
				}
			}
		}
		resolve_title_and_vassal_change = scope:title_change  #报错点，头衔级差

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Break alliances now out of diplo range
		scope:attacker = {
			if = {
				limit = {
					any_ally = {
						NOT = { in_diplomatic_range = scope:attacker }
					}
				}
				every_ally = {
					limit = {
						NOT = { in_diplomatic_range = scope:attacker }
					}
					break_alliance = scope:attacker
				}
			}
		}

		# Truce
		add_truce_attacker_victory_effect = yes
	}

	on_white_peace_desc = {
		triggered_desc = {
			trigger = {
				scope:defender = { oe_struggle_tartaria_reclamation_should_vassalize_trigger = yes }
			}
			desc = iberian_reclamation_cb_white_peace_desc_vassalize
		}
		triggered_desc = {
			trigger = {
				scope:defender = { oe_struggle_tartaria_reclamation_should_vassalize_trigger = no }
			}
			desc = iberian_reclamation_cb_white_peace_desc_conquer
		}
	}

	on_white_peace = {
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # not important as scale values are identical
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		triggered_desc = {
			trigger = {
				scope:defender = { oe_struggle_tartaria_reclamation_should_vassalize_trigger = yes }
			}
			desc = iberian_reclamation_cb_defeat_desc_vassalize
		}
		triggered_desc = {
			trigger = {
				scope:defender = { oe_struggle_tartaria_reclamation_should_vassalize_trigger = no }
			}
			desc = iberian_reclamation_cb_defeat_desc_conquer
		}
	}

	on_defeat = {

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}

		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "oe_EXPEL_INTERLOPER_WAR_NAME"
	war_name_base = "oe_EXPEL_INTERLOPER_WAR_NAME_BASE"
	cb_name = "oe_EXPEL_INTERLOPER_CB_NAME"

	interface_priority = 79

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8
}


county_struggle_cb = {
	group = struggle
	icon = struggle
	combine_into_one = yes
	interface_priority = 112
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = {
		scope:attacker = {
			any_character_struggle = {
				involvement = involved
				has_struggle_phase_parameter = struggle_clash_restricted_to_single_county
			}
		}
	}
	
	attacker_score_from_occupation_scale = 150
	attacker_score_from_battles_scale = 150
	defender_score_from_battles_scale = 150

	allowed_against_character = {
		OR = {
			# Keep the CB if your house completed the Hostility ending
			AND = {
				exists = scope:attacker.house
				scope:attacker.house = {
					OR ={
						has_house_modifier = fp2_struggle_hostility_house_combined_modifier
						has_house_modifier = fp2_struggle_hostility_house_faith_modifier
						has_house_modifier = fp2_struggle_hostility_house_culture_modifier
					}
				}
			}
			# During the Struggle
			scope:attacker = {
				any_character_struggle = {
					involvement = involved
					struggle_can_access_unlocks_bargain_fealty_interaction_trigger = yes
					is_secondary_character_involvement_either_trigger = { CHAR = scope:defender }
				}
			}
		}

		NOT = { scope:attacker = { any_liege_or_above = { this = scope:defender } } }
	}
	
	target_titles = all
	target_title_tier = county
	ignore_effect = change_title_holder
	defender_ticking_warscore = 0.125
	attacker_ticking_warscore = 0.125

	defender_score_from_battles_scale = 150
	attacker_score_from_battles_scale = 150

	ai_only_against_neighbors = yes
	#ai_can_target_all_titles = { always = yes }
	ai_score_mult = { value = struggle_conquest_ai_score_value }

	valid_to_start = {
		scope:target = {
			valid_struggle_cb_target_trigger = { CHARACTER = scope:attacker }
		}
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier >= tier_county
					exists = holder
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_county_conquest_war_invalidated_message
	on_invalidated = {
	}

	cost = {
		# Charge piety against same-faith opponents.
		piety = {
			value = 0
			if = {
				limit = {
					scope:defender.faith = scope:attacker.faith
				}
				# Struggle multipliers.
				value = struggle_cb_phase_modifier_cost
			}
			# Standard multipliers.
			multiply = common_cb_piety_cost_multiplier_sans_struggles
		}
		# & prestige against diff-faith opponents.
		prestige = {
			value = 0
			if = {
				limit = {
					NOT = { scope:defender.faith = scope:attacker.faith }
				}
				# Struggle multipliers.
				value = struggle_cb_phase_modifier_cost
			}
			# Standard multipliers.
			multiply = common_cb_prestige_cost_multiplier_sans_struggles
		}
	}

	on_declaration = { on_declared_war = yes }

	on_victory_desc = {
		first_valid = {
			# We play a different version for OPMs...
			triggered_desc = {
				trigger = {
					struggle_conquest_cb_target_is_ocm_trigger = yes
					scope:attacker = { is_local_player = yes }
				}
				desc = county_struggle_cb_victory_desc_opm_attacker
			}
			triggered_desc = {
				trigger = { struggle_conquest_cb_target_is_ocm_trigger = yes }
				desc = county_struggle_cb_victory_desc_opm
			}
			# ... compared to just regular quarrels.
			triggered_desc = {
				trigger = {
					scope:attacker = { is_local_player = yes }
				}
				desc = county_struggle_cb_victory_desc_attacker
			}
			desc = county_struggle_cb_victory_desc
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		every_in_list = {
			list = target_titles
			custom_tooltip = CONQUEST_CB_TITLE

			struggle_cb_title_transfer = yes
		}
		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}
		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = no
			}
		}
		resolve_title_and_vassal_change = scope:change
		# Prestige Progress for the Attacker
		scope:attacker = {
			add_prestige_experience = {
				value = 0
				every_in_list = {
					list = target_titles
					add = minor_prestige_value
				}
			}
		}
		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:defender = { is_local_player = yes }
				}
				desc = county_struggle_cb_white_peace_desc_defender
			}
			desc = county_struggle_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}
		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # Not important as the scales are identical
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}
		scope:defender = {
			stress_impact = { arrogant = medium_stress_impact_gain }
		}
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:defender = { is_local_player = yes }
				}
				desc = county_struggle_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_struggle_cb_defeat_desc_attacker
			}
			desc = county_struggle_cb_defeat_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }
		
		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 2
			}
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
		}
		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}
		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}
		add_truce_attacker_defeat_effect = yes
		scope:attacker = { save_temporary_scope_as = loser }
		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "STRUGGLE_WAR_NAME"
	war_name_base = "STRUGGLE_WAR_NAME_BASE"
	cb_name = "STRUGGLE_COUNTY_CB_NAME"

	interface_priority = 79

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8
	
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
}



oe_normad_invasion_cb = {
	group = event
	icon = request_mercenary
	war_name = "fp3_turkic_invasion_cb_war_name"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "fp3_turkic_invasion_cb_name"

	interface_priority = 8
	attacker_wargoal_percentage = 0.8
	
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	target_title_tier = duchy
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	allowed_for_character = { always = no }
	
	attacker_score_from_occupation_scale = 150
	attacker_score_from_battles_scale = 150
	defender_score_from_battles_scale = 150

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = {
			add_to_list = invasion_beneficiary_candidates
			every_courtier = {
				limit = {
					is_physically_able = yes
					is_adult = yes
					culture = { has_same_culture_heritage = scope:attacker.culture }
				}
				add_to_list = invasion_beneficiary_candidates
			}
			ordered_in_list = {
				list = invasion_beneficiary_candidates
				order_by = {
					value = 1
					if = {
						limit = { can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:attacker } }
						add = 20
					}
					if = {
						limit = { this = scope:attacker }
						multiply = 0.5
					}
					if = {
						limit = { is_heir_of = scope:attacker }
						add = -10
					}
					if = {
						limit = { is_spouse_of = scope:attacker }
						add = -10
					}
					if = {
						limit = { has_no_particular_noble_roots_trigger = yes }
						add = 10
					}
				}
				save_scope_as = invasion_beneficiary
			}
		}

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		every_in_list = {
			list = target_titles
			custom = fp3_turkic_invasion_beneficiary
			custom_tooltip = fp3_turkic_invasion_title
			every_in_de_jure_hierarchy = {
				limit = {
					tier = tier_county
					# Current holder must be a (sub)vassal of the defender (no poaching titles from 3rd parties!)
					#exists = holder
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}
				change_title_holder = {
					holder = scope:invasion_beneficiary
					change = scope:change
					take_baronies = yes
				}
			}
			scope:invasion_beneficiary = {
				if = {
					limit = { is_independent_ruler = no }
					becomes_independent = {
						change = scope:change
					}
				}
			}
		}
		show_as_tooltip = {
			every_in_list = {
				list = target_titles
				every_in_de_jure_hierarchy = {
					limit = { holder.top_liege = scope:defender }
					change_title_holder = {
						holder = scope:attacker
						change = scope:change
					}
				}
			}
		}

		resolve_title_and_vassal_change = scope:change
		
		scope:defender = {
			add_character_modifier = {
				modifier = oe_incursion_instability
				years = 20
			}
		}
		
		hidden_effect = {
			scope:invasion_beneficiary = {
				add_gold = 200
				every_sub_realm_county = {
					change_county_control = 100
				}
				every_sub_realm_barony = {
					title_province = {
						refill_garrison = yes
						refill_levy = yes
					}
				}
				if = {
					limit = {
						exists = capital_province
					}
					spawn_army = {
						men_at_arms = {
							type = horse_archers
							stacks = 5
						}
						men_at_arms = {
							type = light_horsemen
							stacks = 5
						}
						location = capital_province
						uses_supply = yes
						inheritable = yes
						name = turkic_tribal_event_troops
					}
				}
				if = {
					limit = {
						faith = { has_doctrine_parameter = unreformed }
						NOT = { has_trait = zealous }
						capital_county.faith ?= {
							NOT = {
								has_doctrine_parameter = unreformed
							}
						}
					}
					random_list = {
						75 = {
							set_character_faith_with_conversion = capital_county.faith
						}
						25 = {
							set_character_faith_with_conversion = faith:mahayana
						}
					}
				}
			}
		}

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = minor_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 0
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # Not important as the scales are identical
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 0
			LOSER_ALLY_FAME_SCALE = 1
		}

		scope:defender = {
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 2
			}
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 0
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes
		scope:attacker = { save_temporary_scope_as = loser }
		on_lost_aggression_war_discontent_loss = yes
	}

	on_victory_desc = {
		desc = fp3_turkic_invasion_cb_victory_desc
	}
	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}
	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}
	on_invalidated_desc = msg_invalidate_war_title

	transfer_behavior = transfer

	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit
	attacker_allies_inherit = no
	defender_allies_inherit = no
}


oe_serve_invasion_cb = {
	group = event
	icon = request_mercenary
	war_name = "oe_serve_invasion_cb_war_name"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "oe_serve_invasion_cb_name"

	interface_priority = 8
	attacker_wargoal_percentage = 0.8
	
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	target_title_tier = duchy
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	allowed_for_character = { always = no }
	
	attacker_score_from_occupation_scale = 150
	attacker_score_from_battles_scale = 150
	defender_score_from_battles_scale = 150

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = {
			add_to_list = invasion_beneficiary_candidates
			every_courtier = {
				limit = {
					is_physically_able = yes
					is_adult = yes
					culture = { has_same_culture_heritage = scope:attacker.culture }
				}
				add_to_list = invasion_beneficiary_candidates
			}
			ordered_in_list = {
				list = invasion_beneficiary_candidates
				order_by = {
					value = 1
					if = {
						limit = { can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:attacker } }
						add = 20
					}
					if = {
						limit = { this = scope:attacker }
						multiply = 0.5
					}
					if = {
						limit = { is_heir_of = scope:attacker }
						add = -10
					}
					if = {
						limit = { is_spouse_of = scope:attacker }
						add = -10
					}
					if = {
						limit = { has_no_particular_noble_roots_trigger = yes }
						add = 10
					}
				}
				save_scope_as = invasion_beneficiary
			}
		}

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		every_in_list = {
			list = target_titles
			custom = fp3_turkic_invasion_beneficiary
			custom_tooltip = fp3_turkic_invasion_title
			every_in_de_jure_hierarchy = {
				limit = {
					tier = tier_county
					# Current holder must be a (sub)vassal of the defender (no poaching titles from 3rd parties!)
					#exists = holder
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}
				change_title_holder = {
					holder = scope:invasion_beneficiary
					change = scope:change
					take_baronies = yes
				}
			}
			scope:invasion_beneficiary = {
				if = {
					limit = { is_independent_ruler = no }
					becomes_independent = {
						change = scope:change
					}
				}
			}
		}
		show_as_tooltip = {
			every_in_list = {
				list = target_titles
				every_in_de_jure_hierarchy = {
					limit = { holder.top_liege = scope:defender }
					change_title_holder = {
						holder = scope:attacker
						change = scope:change
					}
				}
			}
		}

		resolve_title_and_vassal_change = scope:change
		
		scope:defender = {
			add_character_modifier = {
				modifier = oe_serve_invasion_incursion_instability
				years = 20
			}
		}
		
		hidden_effect = {
			scope:invasion_beneficiary = {
				add_gold = 200
				every_sub_realm_county = {
					change_county_control = 100
				}
				every_sub_realm_barony = {
					title_province = {
						refill_garrison = yes
						refill_levy = yes
					}
				}
				if = {
					limit = {
						exists = capital_province
					}
					spawn_army = {
						men_at_arms = {
							type = horse_archers
							stacks = 5
						}
						men_at_arms = {
							type = light_horsemen
							stacks = 5
						}
						location = capital_province
						uses_supply = yes
						inheritable = yes
						name = turkic_tribal_event_troops
					}
				}
				if = {
					limit = {
						faith = { has_doctrine_parameter = unreformed }
						NOT = { has_trait = zealous }
						capital_county.faith ?= {
							NOT = {
								has_doctrine_parameter = unreformed
							}
						}
					}
					random_list = {
						75 = {
							set_character_faith_with_conversion = capital_county.faith
						}
						25 = {
							set_character_faith_with_conversion = faith:mahayana
						}
					}
				}
			}
		}

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = minor_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 0
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # Not important as the scales are identical
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 0
			LOSER_ALLY_FAME_SCALE = 1
		}

		scope:defender = {
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 2
			}
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 0
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes
		scope:attacker = { save_temporary_scope_as = loser }
		on_lost_aggression_war_discontent_loss = yes
	}

	on_victory_desc = {
		desc = fp3_turkic_invasion_cb_victory_desc
	}
	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}
	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}
	on_invalidated_desc = msg_invalidate_war_title

	transfer_behavior = transfer

	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit
	attacker_allies_inherit = no
	defender_allies_inherit = no
}